CREATE OR REPLACE FUNCTION DD_PLSTAT_SF --THANH NGUYEN
    (IDS IN DD_STATUS.IDSTATUS%TYPE)
    RETURN VARCHAR2
IS
    STATUS DD_STATUS.IDSTATUS%TYPE;
    DES VARCHAR2(20);
BEGIN 
    SELECT IDSTATUS INTO STATUS FROM DD_STATUS WHERE IDS=IDSTATUS;
    CASE
    WHEN IDS = 10 THEN DES := 'OPEN';
    WHEN IDS = 20 THEN DES := 'COMPLETE';
    WHEN IDS = 30 THEN DES := 'OVERUE';
    WHEN IDS = 40 THEN DES := 'CLOSED';
    END CASE;
    RETURN DES;    
END;

THANH NGUYEN

SELECT IDPLEDGE, PLEDGEDATE, DD_PLSTAT_SF(IDSTATUS) FROM DD_PLEDGE WHERE IDPLEDGE = 105;

THANH NGUYEN

CREATE OR REPLACE FUNCTION DD_PROJTOT_SF --THANH NGUYEN
    (IDP IN DD_PROJECT.IDPROJ%TYPE)
    RETURN VARCHAR2
IS
    IDPR DD_PROJECT.IDPROJ%TYPE;
    TOTAL NUMBER;
    AMT_TXT VARCHAR2(20);
BEGIN
    SELECT IDPROJ, SUM(PLEDGEAMT) INTO IDPR, TOTAL FROM DD_PLEDGE WHERE IDP= IDPROJ GROUP BY IDPROJ;
    AMT_TXT := TO_CHAR(TOTAL,'$99,999.99');
    IF TOTAL IS NULL THEN
        AMT_TXT := 0;
    END IF;    
    RETURN AMT_TXT;
END;

THANH NGUYEN

SELECT DD_PROJTOT_SF(IDPROJ), IDPROJ FROM DD_PROJECT GROUP BY IDPROJ;

THANH NGUYEN

CREATE OR REPLACE FUNCTION DD_MTHPAY_SF --THANH NGUYEN
    (NUM_MON IN NUMBER, AMT IN DD_PLEDGE.PLEDGEAMT%TYPE)
    RETURN NUMBER
IS
    AMOUNT NUMBER;
BEGIN
    IF NUM_MON > 0 THEN  
        AMOUNT := AMT/NUM_MON;
    ELSE DBMS_OUTPUT.PUT_LINE('NOT ON MONTHLY PAYMENT');     
    END IF;    
    RETURN AMOUNT;
END;
    
THANH NGUYEN

BEGIN
    DBMS_OUTPUT.PUT_LINE(DD_MTHPAY_SF(12, 240));
END;

SELECT IDDONOR, IDPLEDGE, DD_MTHPAY_SF(PAYMONTHS,PLEDGEAMT) FROM DD_PLEDGE WHERE DD_MTHPAY_SF(PAYMONTHS,PLEDGEAMT) IS NOT NULL;

THANH NGUYEN



--PRACTICE PROBLEMS

CREATE OR REPLACE FUNCTION CK_SALE_SF --THANH NGUYEN
    (D IN DATE, IDP IN BB_PRODUCT.IDPRODUCT%TYPE)
    RETURN VARCHAR2
IS
    START_D BB_PRODUCT.SALESTART%TYPE;
    END_D BB_PRODUCT.SALEEND%TYPE;
    MESSAGE VARCHAR2(20);
BEGIN
    SELECT SALESTART, SALEEND INTO START_D, END_D FROM BB_PRODUCT WHERE IDP = IDPRODUCT;
    IF D >= START_D AND D <= END_D THEN
        MESSAGE := 'ON SALE!';
    ELSE 
        MESSAGE := 'GREATE DEAL!';
    END IF;
    RETURN MESSAGE;
END;    

BEGIN
    DBMS_OUTPUT.PUT_LINE(CK_SALE_SF('19-JUN-12',6));
END;

THANH NGUYEN


CREATE OR REPLACE FUNCTION TAX_CALC_SF --THANH NGUYEN
    (IDB IN BB_BASKET.IDBASKET%TYPE)
    RETURN NUMBER
IS
    SSTATE BB_BASKET.SHIPSTATE%TYPE;
    SUB BB_BASKET.SUBTOTAL%TYPE;
    TAX NUMBER;
BEGIN
    SELECT SHIPSTATE, SUBTOTAL INTO SSTATE, SUB FROM BB_BASKET WHERE IDBASKET = IDB;  
    CASE
    WHEN SSTATE = 'VA' THEN TAX := SUB*0.45;
    WHEN SSTATE = 'NC' THEN TAX := SUB*0.03;
    WHEN SSTATE = 'SC' THEN TAX := SUB*0.06;
    END CASE;
    RETURN TAX;
    EXCEPTION
    WHEN OTHERS THEN TAX := 0;
    RETURN TAX;
END;    
THANH NGUYEN

BEGIN 
    DBMS_OUTPUT.PUT_LINE(TAX_CALC_SF(4));
END;    

SELECT TAX_CALC_SF(IDBASKET) FROM BB_BASKET WHERE IDBASKET = 4;

THANH NGUYEN

CREATE OR REPLACE FUNCTION STATUS_DESC_SF --THANH NGUYEN
    (IDS IN BB_BASKETSTATUS.IDSTAGE%TYPE)
    RETURN VARCHAR2
IS
    DES VARCHAR2(40);
    ID_S NUMBER;
BEGIN
    SELECT MAX(IDSTAGE) INTO ID_S FROM BB_BASKETSTATUS WHERE IDSTAGE=IDS;
    CASE
    WHEN ID_S = 1 THEN DES := 'ORDER SUBMITTED';
    WHEN ID_S = 2 THEN DES := 'ACCEPTED, SENT TO SHIPPING';
    WHEN ID_S = 3 THEN DES := 'BACK-ORDERED';
    WHEN ID_S = 4 THEN DES := 'CANCELLED';
    WHEN ID_S = 5 THEN DES := 'SHIPPED';
    END CASE;
    RETURN DES;
END;

SELECT IDSTAGE, STATUS_DESC_SF(IDSTAGE)FROM BB_BASKETSTATUS WHERE IDBASKET =4;

THANH NGUYEN



CREATE OR REPLACE FUNCTION ORD_SHIP_SF --THANH NGUYEN
    (IDB IN BB_BASKET.IDBASKET%TYPE)
    RETURN VARCHAR
IS
    IDS BB_BASKETSTATUS.IDSTAGE%TYPE;
    ORDERD BB_BASKET.DTORDERED%TYPE;
    SHIP BB_BASKETSTATUS.DTSTAGE%TYPE;
    TEXT_M CHAR(20);
    DIFF NUMBER;
BEGIN
    SELECT MAX(IDSTAGE) INTO IDS FROM BB_BASKETSTATUS WHERE IDBASKET = IDB;
    SELECT DTORDERED INTO ORDERD FROM BB_BASKET WHERE IDBASKET = IDB;
    SELECT DTSTAGE INTO SHIP FROM BB_BASKETSTATUS WHERE IDBASKET = IDB AND IDSTAGE = IDS;  
    IF IDS != 5 THEN
        TEXT_M := 'NOT SHIPPED';
    ELSE
        DIFF := SHIP - ORDERD;
        IF DIFF <= 1 THEN
            TEXT_M := 'OK';
        ELSE
            TEXT_M := 'CHECK';
        END IF;
    END IF;
    RETURN TEXT_M;
END;

BEGIN
DBMS_OUTPUT.PUT_LINE(ORD_SHIP_SF(12));
END;

THANH NGUYEN


SET SERVEROUTPUT ON